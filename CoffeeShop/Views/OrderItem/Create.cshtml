@model CoffeeShop.Models.Order.OrderItemModel
@using CoffeeShop.Models

@{
    ViewBag.Title = "Create";
}
<br /><br />
<h2>Create</h2>

    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@Model.Coffee.CoffeeId" />
    <div class="form-horizontal">
        <h4>OrderItemModel</h4>
        <hr />

        <div style="margin:auto; width:50%; border:3px solid gray; padding:10px" class="bg-primary card text-center" style="width: 18rem;">
            Currently ordering: <br /><br />
            <img class="card-img-top" src="@Model.Coffee.ImgUrl" alt="Coffee" width="100%">
            <div class="card-body">
                <br />
                <h5 class="card-title">Ingredients: </h5>
                <p class="card-text">
                    @{
                        foreach (IngredientInCoffeeModel ingredientQuantity in (List<IngredientInCoffeeModel>)ViewBag.IngredientsForCoffee)
                        {
                            <strong>@ingredientQuantity.Ingredient.Name x @ingredientQuantity.Quantity, Price: @(ingredientQuantity.Ingredient.Price*ingredientQuantity.Quantity) </strong>
                            <br />
                        }
                    }<br />
                </p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item bg-danger">Name: @Model.Coffee.Name</li>
                <li class="list-group-item bg-danger">Price: @Model.Coffee.TotalPrice denars.</li>
                <li class="list-group-item bg-danger">Size: @Model.Coffee.Size</li>
                <li class="list-group-item bg-danger">Description: @Model.Coffee.Description</li>
            </ul><br />
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6" style="float:left">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { min = "1", @Value = "1", @class = "form-control quantity-order" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6" style="float:left">
                    <input data-button-id="@Model.Coffee.CoffeeId" type="submit" value="Order" class="btn btn-success add-order-item" />
                </div>
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container" style="padding-top:5%">
            @Html.ActionLink("Back to List", "Index", "Coffee", routeValues: null, htmlAttributes: new { @class = "card-link btn btn-info" })
        </div>
    </div>

@section Styles{
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.2/css/bootstrap.min.css" integrity="sha384-y3tfxAZXuh4HwSYylfB+J125MxIs6mR5FOHamPBG064zB+AFeWH94NdvaCBm8qnd" crossorigin="anonymous">
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        $(".add-order-item").click(function () {
            var button = $(this);
            console.log("test");
            var quantity = $(".quantity-order").val();
            var title = "";
            if (quantity >= 2) {
                title = "Дали сакате да го додадете ова кафе " + quantity + " пати во вашата нарачка?";
            }
            else {
                title = "Дали сакате да го додадете ова кафе само еднаш во вашата нарачка?";
            }
            bootbox.confirm(title
                , function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            data: { "id": button.attr("data-button-id"), "quantity": quantity },
                            url: "/OrderItem/Create/",
                            error: function () {
                                bootbox.alert({
                                    message: "Успешно додадовте " + quantity+" артикли!",
                                    backdrop: true
                                });
                            },
                            dataType: 'json'
                        });
                    }
                });
        });
    })
    </script>     
}