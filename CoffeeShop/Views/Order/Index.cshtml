@model IEnumerable<CoffeeShop.Models.Order.OrderModel>
@using CoffeeShop.Enumerations
@using CoffeeShop.Models.ViewModels

@{
    ViewBag.Title = "Orders";
}

<div class="container">
    <h2 class="text-center mt-3">@ViewBag.Title</h2>

    <div class="hr"><hr /></div>

    @{
        if (ViewBag.Empty == null)
        {
            <div class="container align-btns">
                <h4 style="font-weight: bold;">Filter orders by status: </h4>
                    @{

                        foreach (var orderStatus in (List<string>)ViewBag.OrderStatus)
                        {
                            <div class="container mt-4 form-group" style="width:30%">
                                <div class="checkbox-inline">
                                    <div class="container_new" for="@orderStatus">
                                        <em>@orderStatus</em>
                                        <input data-id="@orderStatus" class="form-check-input" type="checkbox" value="@orderStatus" name="@orderStatus" id="@orderStatus" autocomplete="off" />
                                        <span class="checkmark checkmark-color"></span>
                                    </div>
                                </div>
                            </div>

                        }
                    }
                <div class="hr"><hr /></div>
            </div>
            <div class="container table-responsive">
                <table class="table table-hover table-striped dt-responsive display nowrap" id="table1" style="width:100%">
                    <thead class="bg-dark text-orange">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Address)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderStatus)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderFinishTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderRating)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OrderStatus)
                                </td>
                                <td>
                                    @{
                                        if (item.OrderStatus != OrderStatus.INACTIVE)
                                        {
                                            @Html.DisplayFor(modelItem => item.OrderTime);
                                        }
                                        else
                                        {
                                            <em>Yet to be activated</em>
                                        }

                                    }
                                </td>
                                <td>
                                    @{
                                        if (item.OrderStatus == OrderStatus.FINISHED)
                                        {
                                            @Html.DisplayFor(modelItem => item.OrderFinishTime);
                                        }
                                        else if (item.OrderStatus == OrderStatus.CANCELLED)
                                        {
                                            if (User.IsInRole(UserRoles.User))
                                            {
                                                <em>I am sorry. Your order has been cancelled...</em>
                                            }
                                            else
                                            {
                                                <em>Cancelled</em>
                                            }
                                        }
                                        else
                                        {
                                            <em>Yet to be finished</em>
                                        }

                                    }
                                </td>
                                <td>
                                    @{
                                        if (item.OrderRating != 0)
                                        {
                                            @Html.DisplayFor(modelItem => item.OrderRating);
                                        }
                                        else if (item.OrderStatus == OrderStatus.CANCELLED)
                                        {
                                            if (User.IsInRole(UserRoles.User))
                                            {
                                                <em>I am sorry. Your order has been cancelled...</em>
                                            }
                                            else
                                            {
                                                <em>Cancelled</em>
                                            }
                                        }
                                        else
                                        {
                                            <em>Yet to be rated</em>
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("‎", "Details", new { id = item.OrderId }, new { @class = "fa fa-info-circle fa-2x text-success", @title="Order details" })
                                    @{
                                        List<CancelOrderViewModel> cancellable = ViewBag.Cancellable;
                                        bool canCancel = cancellable.Where(can => can.OrderId == item.OrderId).First().Cancellable;
                                        if (canCancel && User.IsInRole(UserRoles.User) && (item.OrderStatus == OrderStatus.FINISHED || item.OrderStatus == OrderStatus.CANCELLED))
                                        {
                                            canCancel = !canCancel;
                                        }
                                        bool canActivate = item.OrderStatus == OrderStatus.INACTIVE ? true : false;
                                        bool canFinish = item.OrderStatus == OrderStatus.PENDING ? true : false;
                                        bool canRate = (item.OrderRating == 0 && item.OrderStatus == OrderStatus.FINISHED) ? true : false;
                                        bool canDiscard = (item.OrderStatus == OrderStatus.FINISHED || item.OrderStatus == OrderStatus.CANCELLED) ? true : false;
                                        if (canFinish && !User.IsInRole(UserRoles.User))
                                        {
                                            canCancel = false;
                                        }
                                        string btnDeactivateName = (item.OrderStatus == OrderStatus.INACTIVE || item.OrderStatus == OrderStatus.FINISHED || item.OrderStatus == OrderStatus.CANCELLED) ? "Remove" : "Cancel";
                                    }
                                    <button data-hide=@canCancel data-order-id=@item.OrderId class="fa fa-remove js-delete fa-2x text-danger btn-cancel" title="@btnDeactivateName"></button>

                                    @{
                                        if (User.IsInRole(UserRoles.User))
                                        {
                                            <button data-hide=@canActivate data-order-id=@item.OrderId class="fa fa-check text-success fa-2x btn-activate" title="Activate the order"></button>
                                            <button data-hide=@canDiscard data-order-id=@item.OrderId class="fa fa-remove js-delete fa-2x text-danger btn-discard" title="Discard the order"></button>
                                            <button data-hide=@canRate data-order-id=@item.OrderId class="fa fa-star text-warning fa-2x btn-rate" title="Rate the order"></button>
                                        }
                                    }
                                    @{
                                        if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
                                        {
                                            <button data-hide=@canFinish data-order-id=@item.OrderId class="fa fa-check text-success fa-2x btn-finish" title="Finish the order">Finish order</button>
                                            <button data-hide=@canFinish data-order-id=@item.OrderId class="fa fa-bolt text-warning fa-2x btn-force" title="Cancel the order">Cancel order</button>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
            
        }
        else
        {
            if (User.IsInRole(UserRoles.User))
            {
                <h1>You have no orders!</h1>
            }
            else
            {
                <h1>No orders to show...</h1>
            }
        }
    }
</div>

@section Styles {
    <link href="@Url.Content("~/Styles/Checkbox.css")" rel="stylesheet" type="text/css" />
    <style>
        i[class*=fa-times]::before {
            background: transparent;
        }
    </style>
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var table = $("#table1").DataTable();

            $("#table1 .btn-cancel, .btn-activate, .btn-finish, .btn-discard, .btn-force, .btn-rate").each(function () {
                var button = $(this);
                if (button.attr("data-hide") == "False") {
                    button.hide();
                }
            })

            $("#table1 .btn-cancel").click(function () {
                var button = $(this);
                var text = button.html();

                if (text == "Cancel") {
                    bootbox.confirm("Дали сакате да ја поништите нарачката?", function (result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                url: "/Order/Cancel/" + button.attr("data-order-id"),
                                success: function () {
                                    location.reload();
                                }
                            });
                        }
                    });
                }
                else {
                    bootbox.confirm("Дали сакате да ја избришете нарачката?", function (result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                url: "/Order/Delete/" + button.attr("data-order-id"),
                                success: function () {
                                    table.row(button.parents("tr")).remove().draw();
                                }
                            });
                        }
                    });
                }
            });

            $("#table1 .btn-activate").click(function () {
                var button = $(this);
                bootbox.confirm("Дали сакате да ја активирате нарачката?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Order/Activate/" + button.attr("data-order-id"),
                            success: function () {
                                location.reload();
                            }
                        });
                    }
                });
            });

            $("#table1 .btn-finish").click(function () {
                var button = $(this);
                bootbox.confirm("Дали сакате да ја поставите нарачката како завршена?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Order/Finish/" + button.attr("data-order-id"),
                            success: function () {
                                location.reload();
                            }
                        });
                    }
                });
            });
            $('#toggle-img').on("click", function () {
                $('.hidden-img').toggle('slow');
            });

            $("#table1 .btn-discard").click(function () {
                var button = $(this);
                bootbox.confirm("Дали сакате да ја отстраните завршената нарачка?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Order/Discard/" + button.attr("data-order-id"),
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });

            $("#table1 .btn-force").click(function () {
                var button = $(this);
                bootbox.confirm("Дали сакате да ја откажете оваа нарачка?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Order/ForceCancel/" + button.attr("data-order-id"),
                            success: function () {
                                location.reload();
                            }
                        });
                    }
                });
            });

            $("#table1 .btn-rate").click(function () {
                var button = $(this);
                bootbox.prompt({
                    title: "Внесете оценка на нарачката",
                    inputType: 'number',
                    max: 5,
                    min: 1,
                    value: 1,
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                data: { "id": button.attr("data-order-id"), "grade": result },
                                url: "/Order/RateOrder",
                                error: function () {
                                    var row_index = table.row(button.parents("tr")).index()
                                    table.cell({ row: row_index, column: 4 }).data(parseInt(result))
                                    bootbox.alert({
                                        message: "Ви благодариме за оцената!",
                                        backdrop: true
                                    });
                                    table.draw()
                                    button.hide();
                                },
                                dataType: 'json'
                            });
                        }
                    }
                });
            });

            $(".ing_check").click(function () {
                var ids = {};
                $('input[type=checkbox]:checked').each(function () {
                    ids[$(this).attr("name")] = $(this).val();
                });
                $.ajax({
                    method: "GET",
                    url: "/api/CoffeeApi",
                    data: ids,
                    success: function (result) {
                        var validData = JSON.stringify(result);
                        $('#table1').DataTable()["aaData"] = validData;
                        table.draw();
                    },
                    dataType: 'json'
                });
            });
        });
    </script>
}