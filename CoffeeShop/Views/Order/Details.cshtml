@model CoffeeShop.Models.Order.OrderModel
@using CoffeeShop.Enumerations

@{
    ViewBag.Title = "Details";
}
<div class="container text-center">

    <h2 class="mt-3">Order details</h2>
    <div class="hr"><hr /></div>
    <div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Address) :
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.OrderStatus) :
            </dt>

            <dd>
                @Html.DisplayFor(model => model.OrderStatus)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.OrderTime) :
            </dt>

            <dd>
                @{
                    if (Model.OrderStatus != OrderStatus.INACTIVE)
                    {
                        @Html.DisplayFor(model => model.OrderTime);
                    }
                    else
                    {
                        <em>Order is still not activated...</em>
                    }
                }
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.OrderFinishTime) :
            </dt>

            <dd>
                @{
                    if (Model.OrderStatus == OrderStatus.FINISHED)
                    {
                        @Html.DisplayFor(model => model.OrderFinishTime);
                    }
                    else
                    {
                        if (Model.OrderStatus != OrderStatus.CANCELLED)
                        {
                            <em>Order is still not finished...</em>
                        }
                        else
                        {
                            if (User.IsInRole(UserRoles.User))
                            {
                                <em>I am sorry. Your order has been cancelled...</em>
                            }
                            else
                            {
                                <em>Cancelled</em>
                            }
                        }
                    }
                }
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.OrderRating) :
            </dt>

            <dd>
                @{
                    if (Model.OrderStatus == OrderStatus.FINISHED)
                    {
                        @Html.DisplayFor(model => model.OrderRating);
                    }
                    else
                    {
                        if (Model.OrderStatus != OrderStatus.CANCELLED)
                        {
                            <em>Order is still not finished...</em>
                        }
                        else
                        {
                            if (User.IsInRole(UserRoles.User))
                            {
                                <em>I am sorry. Your order has been cancelled...</em>
                            }
                            else
                            {
                                <em>Cancelled</em>
                            }
                        }
                    }
                }
            </dd>

        </dl>
        <strong>Order items: </strong><br /><br />
        <div class="list-group w-50 text-center m-0 m-auto mt-5">
            @{
                decimal totalPrice = 0;
                var j = 1;
                foreach (var orderItem in Model.OrderItems)
                {
                        <a href="~/Coffee/Details/@orderItem.Coffee.CoffeeId" class="list-group-item list-group-item-action flex-column align-items-start text-left">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-4"><strong>Coffee name:</strong> @orderItem.Coffee.Name</h5>
                            </div>
                            @if (orderItem.Coffee.Ingredients.Count != 0)
                            {
                                <p class="mb-1"><strong>Ingredients:</strong> @String.Join(", ", orderItem.Coffee.Ingredients.Select(ing => ing.Name))</p>

                            }
                            <p class="mb-1">
                                <strong>Quantity:</strong> @orderItem.Quantity
                            </p>
                            @{ 
                                var price = orderItem.Coffee.TotalPrice * orderItem.Quantity;
                                totalPrice += price;
                            }
                        <p class="mb-1"><strong>Order item price: </strong>@price</p>
                        </a>
                }
            }
        </div><br />

        <em><strong>Total order price: @totalPrice</strong></em><br /><br />
    
</div>


<p>
    @Html.ActionLink("Back to orders", "Index", null, new { @class = "btn btn-info" })
</p>

</div>

@section Styles{
    <style>
        .list-group a:nth-child(odd) {
            background-color: lightgray;
        }
    </style>
}