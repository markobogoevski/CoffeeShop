@model CoffeeShop.Models.ViewModels.CreateCoffeeViewModel

<section style="margin-top: 80px">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.CoffeeId);

        <h4>Edit coffee</h4>
        <hr />
        <div class="row container">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <img src="@Model.ImgUrl" class="editImg" width="300px" />
            </div>
            <div class="col-md-7">
                @Html.ValidationSummary(false, "", new { @class = "text-danger ml-0" })
                @{
                    var boxType = "radio";
                    var flag = true;
                }
                @foreach (var item in Model.availableIngredients)
                {
                    <div class="form-group">
                        <label class="row font-weight-bold ml-2">Choose your ingredient: </label>
                        @{
                            var shouldCheck = Model.selectedIngredients.Any(x => x.IngredientId == item.IngredientId) ? "checked" : "";
                        }
                        <div class="m-1 d-inline-block">
                            <input type=@boxType value="@item.IngredientId" name="selectedIngredients" id="@item.IngredientId" class="form-check-input toggle" hidden @shouldCheck />
                            @Html.Label(item.Name, htmlAttributes: new { @for = item.IngredientId, @class = "form-check-label btn toggle-label" })
                        </div>
                    </div>
                    if (flag)
                    {
                        boxType = "checkbox";
                        flag = false;
                    }
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-warning" />
                @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>

    }
</section>