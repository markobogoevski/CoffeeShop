@model IEnumerable<CoffeeShop.Models.CoffeeModel>
@using CoffeeShop.Models;
@using CoffeeShop.Enumerations;

@{
    ViewBag.Title = "Coffee for sale";
}
<h2 class="text-center">@ViewBag.Title</h2>

<div class="hr"><hr /></div>

<div hidden data-coffee-count="@Model.Count()" id="div-count"  ></div>

<div class="container">
    <div class ="container align-btns" style="float:left; display: inline-block" >
        @{
            if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
            {
                
                    @Html.ActionLink("Create a new coffee", "Create", null, new { @class = "inline-btn btn btn-primary" })

                    if (Model.Count() != 0)
                    {
                    @Html.ActionLink("Check out coffee statistics", "CoffeeStatistics", null, new { @class = "inline-btn btn btn-primary" })
                    
                    }
                
            }
        }
        @{
            if (User.IsInRole(UserRoles.User))
            {
                    @Html.ActionLink("Create your own custom coffee!", "CreateCustom", null, new { @class = "inline-btn btn btn-success" })
                
            }
        }

        @{
            if (Model.Count() != 0)
            {
                    @Ajax.ActionLink("Check out the coffee of the day",
                                     "CoffeeDay",
                                     null,
                                     new AjaxOptions
                                     {
                                         UpdateTargetId = "dailydeal",
                                         InsertionMode = InsertionMode.Replace,
                                         HttpMethod = "GET"
                                     },
                                     new { @class = "inline-btn btn btn-danger", id="dailydeal"})
            
            }
        }
    </div>
    @{
        if (ViewBag.Ingredients.Count != 0)
        {
            <div class="col-md-6" style="float:right">
                <strong>Filter coffee by ingredients: </strong><br /><br />
                @{
                    foreach (IngredientModel ingredient in (List<IngredientModel>)ViewBag.Ingredients)
                    {
                        <div class="form-group">
                            <div class="m-1 d-inline-block">
                                <label class="container_new" for="@ingredient.IngredientId">
                                    <em>@ingredient.Name</em>
                                    <input data-id="@ingredient.IngredientId" class="ing_check" type="checkbox" value="@ingredient.IngredientId" name="@ingredient.Name" id="@ingredient.IngredientId" autocomplete="off" />
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>

                    }
                }
            </div>
        }
    }
</div>

<div class="hr"><hr /></div>

<table class="table" id="table1">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                <img alt="@item.Name" src="@Url.Content(item.ImgUrl)" width="300px" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @{
                    if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.CoffeeId }, new { @class = "btn btn-info" })
                        <button data-coffee-id="@item.CoffeeId" class="btn btn-danger js-delete">Delete</button>
                    }
                }
                @Html.ActionLink("Details", "Details", new { id = item.CoffeeId }, new { @class = "btn btn-info" })
                @{
                    if (User.IsInRole(UserRoles.User))
                    {
                        @Html.ActionLink("Add to shopping cart", "Create", "OrderItem", new { id = item.CoffeeId }, new { @class = "btn btn-success" })
                    }
                }
            </td>
        </tr>
        }
    </tbody>

</table>

@section Styles {
    <link href="@Url.Content("~/Styles/Checkbox.css")" rel="stylesheet" type="text/css" />
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var table = $("#table1").DataTable();
            $("#table1 .js-delete").click(function () {
                var button = $(this);
                bootbox.confirm("Дали сакате да го избришете кафето?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Coffee/Delete/" + button.attr("data-coffee-id"),
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                                var div = $("#div-count");
                                var value = div.attr("data-coffee-count");
                                var newValue = parseInt(value) - 1;
                                div.attr("data-coffee-count", newValue)
                                if (parseInt(div.attr("data-coffee-count")) == 0) {
                                    location.reload();
                                }
                            }
                        });
                    }
                });
            });


            $(".ing_check").click(function () {
                var ids = {};
                $('input[type=checkbox]:checked').each(function () {
                    ids[$(this).attr("name")] = $(this).val();
                });
                $.ajax({
                    method: "GET",
                    url: "/api/CoffeeApi",
                    data: ids,
                    success: function (result) {
                        var validData = JSON.stringify(result);
                        $('#table1').DataTable()["aaData"] = validData;

                        table.draw();
                    },
                    dataType: 'json'
                });
            });
        });
    </script>
}