@model CoffeeShop.Models.Order.OrderModel
@using CoffeeShop.Models.Order
@using CoffeeShop.Helpers

@{
    ViewBag.Title = "Cart";
}
<div class="container">
    <section id="cartSection">

        @{
            if (ViewBag.Valid == "True")
            {
                <h1 class="mt-3">Items in cart</h1>
                <div class="hr"><hr /></div>
                <div class="table-responsive">
                    <table class="table table-hover table-striped mt-3 dt-responsive display nowrap" id="cartTable" style="width:100%">
                        <thead class="bg-dark text-white p-0 m-0">
                            <tr>
                                <th>
                                    #
                                </th>
                                <th>
                                    Cart item
                                </th>
                                <th>
                                    Quantity in cart
                                </th>
                                <th>
                                    Size of item
                                </th>
                                <th>
                                    Price per item
                                </th>
                                <th>
                                    Total per item
                                </th>
                                <th class="no-sort text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int j = 1;
                                foreach (var item in Model.OrderItems)
                                {
                                    int maxQuantity = ((List<int>)ViewBag.MaxQuantities).ElementAt(j - 1);

                                    <tr>
                                        <td>
                                            <span>@j</span>
                                        </td>
                                        <td>
                                            <span>@Html.DisplayFor(modelItem => item.Coffee.Name)</span>
                                        </td>
                                        <td>
                                            <span class="quantity">@item.Quantity</span>
                                        </td>
                                        <td>
                                            <span>@item.CoffeeSize</span>
                                        </td>
                                        <td>
                                            <span>@item.Coffee.TotalPrice</span>
                                        </td>
                                        <td>
                                            <span>
                                                @((item.Coffee.TotalPrice * item.Quantity))
                                            </span>
                                        </td>
                                        <td>
                                            <span class="removeFromCart deleteOrder" cart-id="@item.OrderItemId">
                                                <i class="fa btn fa-remove fa-lg delete text-danger" title="Remove item"></i>
                                            </span>|
                                            <span data-max-increase="@maxQuantity" class="increaseCoffee" cart-id="@item.Coffee.CoffeeId">
                                                <i class="fa btn fa-cart-plus fa-lg text-dark" title="Increase item quantity"></i>
                                            </span>|
                                            <span class="decreaseCoffee" cart-id="@item.Coffee.CoffeeId">
                                                <i class="fa btn fa-cart-arrow-down fa-lg text-dark delete" title="Decrease item quantity"></i>
                                            </span>
                                        </td>
                                    </tr>
                                    j++;
                                }
                            }
                        </tbody>
                        <tfoot class="bg-dark text-white p-0 m-0 font-weight-bold">
                            <tr>
                                <td>Total:</td>
                                <td id="total">@Model.OrderItems.Select(x => x.Coffee.TotalPrice * x.Quantity).Sum() den.</td>

                            </tr>
                        </tfoot>
                    </table>
                </div>
                <hr class="mt-5" />
                <div class="row pr-3">
                    <div class="form-group container col-6 float-left">
                        <label for="Address" class="font-weight-bold my-0">Delivery address</label><br /><br />
                        <div class="row px-3 my-0">
                            <input name="Address" id="address" class="form-control mr-1 w-75 " /><br />
                            <button id="makeOrderButton" class="btn btn-dark" style="width: 8rem">
                                Place Order &#187;
                            </button>
                        </div><br />
                        <div id="valid" class="text-danger d-none">Enter delivery address</div>
                    </div>
                    <div class="form-group col-6 align-items-baseline justify-content-end" style="display:flex">
                        <div class="wrapper" style="display:inline-block">
                            <button class="btn btn-outline-danger w-100" id="clearBtn">Clear cart</button>
                        </div><br />
                    </div>
                </div>
            }
            else
            {
                <h1 class="mt-3">Your cart is empty!</h1>
                <div class="hr"><hr /></div>
                <h3>Are you full of energy or just haven't chosen a coffee yet?</h3>
            }

        }
    </section>

</div>

@section Styles{
    <style>
        .d-none {
            display: none !important;
        }
    </style>
 
}

@section scripts{
    @{
        var data = (OrderModel)Session["cart"];
    }
<script>
        $(document).ready(function () {
            var table = $("#cartTable").DataTable();

            var message = "";
            $("#makeOrderButton").on('click', function () {
                let address = $("#address").val();
                if (!address) {
                    $('#valid').removeClass('d-none')
                    return
                }
                $.ajax({
                    type: "POST",
                    url: "Order/Create?Address=" + address,
                    data: @Html.Raw(Html.GetOrderRequestJson(data)),
                    success: function (response) {
                        message = JSON.parse(response.responseText).message
                    },
                    error: function (response) {
                        message = JSON.parse(response.responseText).message
                    },
                    complete: function () {
                        bootbox.alert(message, function () {
                            window.location.reload();
                            }
                        );
                    },
                    dataType: "application/json"
                })
            });

            $("#clearBtn").click(function () {
                bootbox.confirm("Are you sure you want to clear the cart?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Cart/ClearCart",
                            complete: function () {
                                table.clear().draw();
                                bootbox.alert("Successfully cleared cart!",
                                    function () {
                                        window.location.reload();
                                    })
                            }
                        });
                    }
                })
            })

            $(".removeFromCart").click(function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to remove this item from the cart?", function (result) {
                    if (result) {
                        $.ajax({
                            method: "POST",
                            url: "/Cart/RemoveOrderItemFromCart",
                            data: { id: button.attr("cart-id") },
                            complete: function () {
                                table.row(button.parents("tr")).remove().draw();
                                bootbox.alert({
                                    message: "Successfully updated cart!",
                                    backdrop: true
                                });
                                location.reload();
                            },
                            type: "application/json"
                        });
                    }
                })
            });

            $(".decreaseCoffee").click(function () {
                var button = $(this);
                var row = button.parentsUntil("#cartTable tr").parent();
                var cell = $(row).find(" td:nth-child(3) span");
                var cell_data = cell.html();
                var size = $(row).find(" td:nth-child(4) span").html();
                bootbox.prompt({
                    title: "Decrease coffee quantity",
                    inputType: 'number',
                    max: parseInt(cell_data),
                    min: 0,
                    value: 1,
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                data: { "id": button.attr("cart-id"), "quantity": -result, "size": size },
                                url: "/Cart/ChangeCoffeeQuantityFromOrder",
                                complete: function () {
                                    cell.html(parseInt(cell_data) - parseInt(result))
                                    bootbox.alert({
                                        message: "Successfully updated cart!",
                                        backdrop: true
                                    });
                                    window.location.reload();
                                },
                                dataType: 'json'
                            });
                        }
                    }
                });
            });
            $(".increaseCoffee").click(function () {
                var button = $(this);
                var row = button.parentsUntil("#cartTable tr").parent();
                var cell = $(row).find(" td:nth-child(3) span");
                var cell_data = cell.html();
                var size = $(row).find(" td:nth-child(4) span").html()
                var max_inc = parseInt(button.attr("data-max-increase"))
                if (max_inc > 0) {
                    bootbox.prompt({
                        title: "Increase coffee quantity",
                        inputType: 'number',
                        max: max_inc,
                        min: 0,
                        value: 1,
                        callback: function (result) {
                            if (result) {
                                $.ajax({
                                    method: "POST",
                                    data: { "id": button.attr("cart-id"), "quantity": result, "size":size },
                                    url: "/Cart/ChangeCoffeeQuantityFromOrder",
                                    complete: function () {
                                        cell.html(parseInt(cell_data) + parseInt(result))
                                        bootbox.alert({
                                            message: "Successfully updated cart!",
                                            backdrop: true
                                        });
                                        window.location.reload();
                                    },
                                    dataType: 'json'
                                });
                            }
                        }
                    });
                }
                else {
                    bootbox.alert({
                        message: "Sorry. There is no more in stock of that coffee!"
                    });
                }
            });
        })


</script>
}